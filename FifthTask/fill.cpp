#include <iostream>
#include <vector>

using namespace std;
int functionCalls = 0;
// Функция закраски
void fill(vector<vector<int>>& matrix, int x, int y) {
    functionCalls++;
    int rows = matrix.size();
    int cols = matrix[0].size();


    if (x < 0 || y < 0 || x >= cols || y >= rows || matrix[y][x] != 0) {
        return;
    }

    // Закрашиваем текущую ячейку
    matrix[y][x] = 2;

    // Рекурсивно закрашиваем соседние ячейки
    fill(matrix, x - 1, y); // Влево
    fill(matrix, x + 1, y); // Вправо
    fill(matrix, x, y - 1); // Вверх
    fill(matrix, x, y + 1); // Вниз
}

int main() {
    // Матрица А
    vector<vector<int>> matrixA = {
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0},
        {0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0},
        {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
        {0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
        {0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    };

    // Матрица Б
    vector<vector<int>> matrixB = {
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0},
        {0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0},
        {0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0},
        {0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
        {0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    };

    int startXА = 10, startYА = 3; // нумерация с 0 => координаты уменьшены на единицу
    int startXB = 2, startYB = 5;


    cout << "Матрица А до закраски:" << endl;
    for (const auto& row : matrixA) {
        for (int cell : row) {
            cout << cell << " ";
        }
        cout << endl;
    }

    fill(matrixA, startXА, startYА);


    cout << "\nМатрица А после закраски:" << endl;
    for (const auto& row : matrixA) {
        for (int cell : row) {
            cout << cell << " ";
        }
        cout << endl;
    }

    cout << "\nСколько вызовов потребовалось для матрицы A: " << functionCalls << endl;
    functionCalls = 0;

    cout << "Матрица Б до закраски:" << endl;
    for (const auto& row : matrixB) {
        for (int cell : row) {
            cout << cell << " ";
        }
        cout << endl;
    }

    fill(matrixB, startXB, startYB);


    cout << "\nМатрица Б после закраски:" << endl;
    for (const auto& row : matrixB) {
        for (int cell : row) {
            cout << cell << " ";
        }
        cout << endl;
    }

    cout << "\nСколько вызовов потребовалось для матрицы Б: " << functionCalls << endl;
    functionCalls = 0;

    return 0;
}
